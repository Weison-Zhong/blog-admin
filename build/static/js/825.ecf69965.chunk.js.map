{"version":3,"file":"static/js/825.ecf69965.chunk.js","mappings":"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","sources":["components/ImgUpload/index.jsx","pages/article-edit/index.jsx","utils/tools.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { message, Upload } from \"antd\";\r\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport \"./index.less\";\r\n\r\nexport default function ImgUpload(props) {\r\n  const { imageUrl, setImageUrl, fileChange } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const handleUpload = () => {\r\n    setLoading(true);\r\n  };\r\n  //图片改变时，生成base64的url仅用于本地预览\r\n  function handleChange(info) {\r\n    const { originFileObj } = info.file;\r\n    fileChange(originFileObj); //修改真实图片对象引用，当保存时转换为formdata传给后台\r\n    getBase64(originFileObj, (imageUrl) => {\r\n      setImageUrl(imageUrl);\r\n      setLoading(false);\r\n    });\r\n  }\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>点击上传图片</div>\r\n    </div>\r\n  );\r\n  return (\r\n    <Upload\r\n      listType=\"picture\"\r\n      showUploadList={false}\r\n      customRequest={handleUpload}\r\n      beforeUpload={beforeUpload}\r\n      onChange={handleChange}\r\n      className=\"img-upload-container\"\r\n    >\r\n      {imageUrl ? (\r\n        <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\r\n      ) : (\r\n        uploadButton\r\n      )}\r\n    </Upload>\r\n  );\r\n}\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng =\r\n    file.type === \"image/jpeg\" ||\r\n    file.type === \"image/jpg\" ||\r\n    file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"仅可上传png或jpg,jpeg格式图片\");\r\n  }\r\n  const isLt3M = file.size / 1024 / 1024 < 3;\r\n  if (!isLt3M) {\r\n    message.error(\"图片文件不能大于 3MB\");\r\n  }\r\n  return isJpgOrPng && isLt3M;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./index.less\";\r\nimport Editor from \"for-editor\";\r\nimport {\r\n  addArticleApi,\r\n  getArticleTypesApi,\r\n  getArticleApi,\r\n  updateArticleApi,\r\n} from \"@/axios/api\";\r\nimport {\r\n  Col,\r\n  Divider,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  message,\r\n  Row,\r\n  Select,\r\n  Space,\r\n  Spin,\r\n  Switch,\r\n  Typography,\r\n} from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport ImgUpload from \"../../components/ImgUpload\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getUrlParams } from \"@/utils/tools\";\r\nconst { Item } = Form;\r\nconst { Option } = Select;\r\nlet imgFile = null;\r\nexport default function ArticleEdit() {\r\n  const formRef = React.createRef();\r\n  const [form] = Form.useForm();\r\n  const [articleContent, setArticleContent] = useState(\"\");\r\n  const [articleTypes, setArticleTypes] = useState([]);\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [newArticleType, setNewArticleType] = useState(\"\");\r\n  const [updatingArticle, setUpdatingArticle] = useState({});\r\n  const history = useHistory();\r\n  const fetchArticleTypes = async () => {\r\n    const res = await getArticleTypesApi();\r\n    const { data } = res;\r\n    if (typeof data === \"undefined\") return;\r\n    setArticleTypes(data);\r\n  };\r\n  const fetchArticleDetail = async (articleId) => {\r\n    setIsLoading(true);\r\n    const res = await getArticleApi(articleId);\r\n    setIsLoading(false);\r\n    const { data, code } = res;\r\n    if (code === 200) {\r\n      const { content, coverImgUrl } = data;\r\n      setUpdatingArticle(data);\r\n      setArticleContent(content);\r\n      setImageUrl(coverImgUrl);\r\n    }\r\n  };\r\n  const addNewArticleType = (e) => {\r\n    e.preventDefault();\r\n    if (!newArticleType) return;\r\n    setArticleTypes([...articleTypes, newArticleType]);\r\n    setNewArticleType(\"\");\r\n  };\r\n  //保存文章\r\n  const handleSaveArticle = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const { id } = updatingArticle || {};\r\n      const antdFormData = await formRef.current.validateFields();\r\n      // console.log(\"Validate Success:\", antdFormData);\r\n      antdFormData.status = Number(antdFormData.status);\r\n      const articleForm = new FormData();\r\n      //遍历antd表单数据插入formdata\r\n      for (let key in antdFormData) {\r\n        articleForm.append(key, antdFormData[key]);\r\n      }\r\n      articleForm.append(\"content\", articleContent);\r\n      articleForm.append(\"coverImage\", imgFile);\r\n      let res = null;\r\n      if (id) {\r\n        //修改\r\n        res = await updateArticleApi(id, articleForm);\r\n      } else {\r\n        //新增\r\n        res = await addArticleApi(articleForm);\r\n      }\r\n      setIsLoading(false);\r\n      const { code, msg } = res;\r\n      if (code !== 200) return;\r\n      if (!id) {\r\n        message.success(\"新增文章成功，正前往列表页\");\r\n        setTimeout(() => {\r\n          history.push(\"/article/list\");\r\n        }, 1500);\r\n      } else message.success(msg);\r\n    } catch (error) {\r\n      message.error(\"保存失败，请重试\");\r\n      setIsLoading(false);\r\n      console.log(\"Failed:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchArticleTypes();\r\n    const { articleId } = getUrlParams() || {};\r\n    articleId && fetchArticleDetail(articleId);\r\n  }, []);\r\n  useEffect(() => {\r\n    formRef.current && formRef.current.setFieldsValue(updatingArticle);\r\n  }, [updatingArticle]);\r\n  return (\r\n    <div className=\"article-edit\">\r\n      <Form form={form} ref={formRef} className=\"form\">\r\n        <Row gutter={2}>\r\n          <Col span={16}>\r\n            <Item name=\"title\" label=\"标题\" rules={[{ required: true }]}>\r\n              <Input allowClear={true} />\r\n            </Item>\r\n            <Item name=\"relatedLink\" label=\"链接\" rules={[{ required: true }]}>\r\n              <Input allowClear={true} />\r\n            </Item>\r\n            <Row gutter={2}>\r\n              <Col span={12}>\r\n                <Item\r\n                  name=\"articleType\"\r\n                  label=\"类型\"\r\n                  rules={[{ required: true, message: \"请选择类型\" }]}\r\n                >\r\n                  <Select\r\n                    style={{ width: 220 }}\r\n                    placeholder=\"请选择文章类型\"\r\n                    dropdownRender={(menu) => (\r\n                      <>\r\n                        {menu}\r\n                        <Divider style={{ margin: \"8px 0\" }} />\r\n                        <Space align=\"center\" style={{ padding: \"0 8px 4px\" }}>\r\n                          <Input\r\n                            placeholder=\"新增文章类型\"\r\n                            value={newArticleType}\r\n                            onChange={(e) => setNewArticleType(e.target.value)}\r\n                          />\r\n                          <Typography.Link\r\n                            onClick={addNewArticleType}\r\n                            style={{ whiteSpace: \"nowrap\" }}\r\n                          >\r\n                            <PlusOutlined />\r\n                          </Typography.Link>\r\n                        </Space>\r\n                      </>\r\n                    )}\r\n                  >\r\n                    {articleTypes.map((item) => (\r\n                      <Option key={item}>{item}</Option>\r\n                    ))}\r\n                  </Select>\r\n                </Item>\r\n              </Col>\r\n              <Col span={6}>\r\n                <Item name=\"weight\" label=\"权重\" rules={[{ required: true }]}>\r\n                  <InputNumber min={0} />\r\n                </Item>\r\n              </Col>\r\n              <Col span={6}>\r\n                <Item\r\n                  label=\"状态\"\r\n                  name=\"status\"\r\n                  rules={[{ required: false }]}\r\n                  valuePropName=\"checked\"\r\n                  initialValue={true}\r\n                >\r\n                  <Switch checkedChildren=\"上架\" unCheckedChildren=\"隐藏\" />\r\n                </Item>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Item className=\"img-upload-container\">\r\n              <ImgUpload\r\n                imageUrl={imageUrl}\r\n                setImageUrl={setImageUrl}\r\n                fileChange={(originFileObj) => {\r\n                  imgFile = originFileObj;\r\n                }}\r\n              />\r\n            </Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Editor\r\n        onSave={handleSaveArticle}\r\n        subfield={true}\r\n        preview={true}\r\n        value={articleContent}\r\n        onChange={(value) => setArticleContent(value)}\r\n      />\r\n      <Spin size=\"large\" tip=\"加载中...\" spinning={isLoading} />\r\n    </div>\r\n  );\r\n}\r\n","function queryURLParams(url) {\r\n  let pattern = /(\\w+)=(\\w+)/gi; //定义正则表达式\r\n  let parames = {}; // 定义参数对象\r\n  url.replace(pattern, ($, $1, $2) => {\r\n    parames[$1] = $2;\r\n  });\r\n  return parames;\r\n}\r\n\r\nfunction getUrlParams(url = window.location.href) {\r\n  if (!url.includes(\"?\")) return;\r\n  const theRequest = {};\r\n  const params = url.split(\"?\")[1];\r\n  const str = params.split(\"&\");\r\n  for (let i = 0; i < str.length; i++) {\r\n    theRequest[str[i].split(\"=\")[0]] = encodeURI(str[i].split(\"=\")[1]);\r\n  }\r\n  return theRequest;\r\n}\r\n\r\nexport { getUrlParams };\r\n"],"names":["ImgUpload","props","imageUrl","setImageUrl","fileChange","useState","loading","setLoading","uploadButton","LoadingOutlined","PlusOutlined","style","marginTop","listType","showUploadList","customRequest","beforeUpload","onChange","info","originFileObj","file","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","className","src","alt","width","isJpgOrPng","type","message","isLt3M","size","Item","Form","Option","Select","imgFile","ArticleEdit","formRef","React","form","articleContent","setArticleContent","articleTypes","setArticleTypes","isLoading","setIsLoading","newArticleType","setNewArticleType","updatingArticle","setUpdatingArticle","history","useHistory","fetchArticleTypes","getArticleTypesApi","res","data","fetchArticleDetail","articleId","getArticleApi","code","content","coverImgUrl","addNewArticleType","e","preventDefault","handleSaveArticle","id","current","validateFields","key","antdFormData","status","Number","articleForm","FormData","append","updateArticleApi","addArticleApi","msg","setTimeout","push","console","log","useEffect","url","window","location","href","includes","theRequest","str","split","i","length","encodeURI","getUrlParams","setFieldsValue","ref","gutter","span","name","label","rules","required","allowClear","placeholder","dropdownRender","menu","margin","align","padding","value","target","onClick","whiteSpace","map","item","min","valuePropName","initialValue","checkedChildren","unCheckedChildren","onSave","subfield","preview","tip","spinning"],"sourceRoot":""}